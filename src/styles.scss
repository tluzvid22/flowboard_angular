// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$flowboard-primary: mat.define-palette(mat.$indigo-palette);
$flowboard-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$flowboard-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$flowboard-theme: mat.define-light-theme(
  (
    color: (
      primary: $flowboard-primary,
      accent: $flowboard-accent,
      warn: $flowboard-warn,
    ),
    typography: mat.define-typography-config(),
    density: 0,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($flowboard-theme);

@import "./styles/variables.scss";
@import url("https://fonts.googleapis.com/css2?family=Mulish:ital,wght@0,200..1000;1,200..1000&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");

/*global*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.headlines {
  h2 {
    font-family: "Poppins", "Roboto", system-ui;
    font-size: 70px;
    font-weight: bold;
    line-height: 110%;
    text-wrap: wrap;
    color: var(--headline1);
    margin-bottom: 24px;
  }

  p {
    font-family: "Mulish", "Roboto", system-ui;
    font-size: 21px;
    line-height: 160%;
    text-wrap: wrap;
    color: var(--headline2);
  }
}

button,
a {
  cursor: pointer;
}

button:hover,
a:hover {
  opacity: 0.9;
}

@media screen and (max-width: 1250px) {
  header .navbar .links a {
    display: none;
  }
}

html,
body {
  height: 100%;
}

.row {
  display: flex;
  flex-direction: row;
}

.column {
  display: flex;
  flex-direction: column;
}

.m-05 {
  margin: 0.5rem;
}

.m-1 {
  margin: 1rem;
}
.mb-1 {
  margin-bottom: 1rem;
}
.mb-2 {
  margin-bottom: 2rem;
}
.mb-4 {
  margin-bottom: 4rem;
}
.m-2 {
  margin: 2rem;
}
.m-3 {
  margin: 3rem;
}
.m-05 {
  margin: 0.5rem;
}

.p-1 {
  padding: 1rem;
}
.p-2 {
  padding: 2rem;
}
.p-3 {
  padding: 3rem;
}
.p-05 {
  padding: 0.5rem;
}

.wrap {
  flex-wrap: wrap;
}

.prevent-copy {
  user-select: none;
}

.gap-05 {
  gap: 0.5rem;
}

.gap-1 {
  gap: 1rem;
}

.gap-2 {
  gap: 2rem;
}

.gap-3 {
  gap: 3rem;
}

.space-between {
  justify-content: space-between;
}

.space-around {
  justify-content: space-around;
}

.align-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-left {
  justify-content: flex-start;
}

.full-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.hidden {
  display: none;
}

.clickable {
  cursor: pointer;
}
